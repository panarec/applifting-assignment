// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    Int     @default(autoincrement()) @id
  name  String?
  password String?
  posts Post[]
  comments Comment[]
}

model Post {
  id        Int      @default(autoincrement()) @id
  title     String
  perex     String?
  content   String?
  author    User?    @relation(fields: [authorId], references: [id])
  authorId  Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
  comments  Comment[]
}

model Comment {
  id        Int      @default(autoincrement()) @id
  content   String
  post      Post     @relation(fields: [postId], references: [id])
  postId    Int
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
  votes     Vote[]
}

model Vote {
  id        Int      @default(autoincrement()) @id
  ipAddress        String
  comment   Comment  @relation(fields: [commentId], references: [id])
  commentId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
}